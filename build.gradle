plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '4.0.0-alpha.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
    sourceCompatibility = JavaVersion.VERSION_20
    targetCompatibility = JavaVersion.VERSION_20
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // SpringBoot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // h2
    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

/** snippet 에 대한 directory 정의
 * jar 파일 내에 문서를 담는다.
 * 그 과정을 gradle test 로 정의
*/
ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

test {
    // 테스트 결과물 directory 를 snippetDir 로 설정
    outputs.dir snippetsDir
}

// 문서 생성 테스트
// 확장 플러그인 적용
asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources { // 특정 파일만 html 로 생성
        include("**/index.adoc")
    }
    baseDirFollowsSourceDir() // 다른 adoc 파일 include 시 경로를 baseDir 로 통일
    // 작업 순서가 test 수행 된 다음에 이 asciidoctor 를 실행
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
